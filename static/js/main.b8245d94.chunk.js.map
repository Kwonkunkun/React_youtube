{"version":3,"sources":["components/Sidebar/sidebar.module.css","components/DefaultContents/popularVideoList.module.css","components/SearchContents/se_searchVideoList.module.css","components/SearchContents/pl_searchVideoList.module.css","components/SearchContents/SearchVideoThumbnail/se_thumbnail.module.css","components/SearchContents/SearchVideoThumbnail/se_thumbnail_inVideo.module.css","components/DefaultContents/DefaultVideoThumbnail/de_thumbnail.module.css","components/Header/header.module.css","components/VideoPlayContents/videoContainer.module.css","config.js","components/Header/SearchForm/searchForm.jsx","components/Header/header.jsx","components/Sidebar/sidebar.jsx","components/DefaultContents/DefaultVideoThumbnail/de_thumbnail.jsx","components/DefaultContents/popularVideoList.jsx","components/SearchContents/SearchVideoThumbnail/se_thumbnail.jsx","components/SearchContents/searchVideoList.jsx","components/VideoPlayContents/videoContainer.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["module","exports","PAGES","requestOptions","method","redirect","callback","a","url","process","fetch","then","response","json","result","items","catch","error","console","log","getYoutubeVideoData","videoId","getYoutubeSearchData","keyword","getYoutubeChanelData","channelId","SearchForm","memo","props","formRef","React","createRef","inputRef","className","styles","searchContainer","ref","onSubmit","event","preventDefault","word","current","value","onSearch","reset","type","placeholder","Header","container","logo","icon","href","this","menu","Component","Sidebar","Thumbnail","state","channelThumnailUrl","undefined","updateChannelThunmnailUrl","datas","snippet","thumbnails","default","setState","onVideoImgClick","onEnterVideo","data","id","config","onClick","src","medium","width","height","alt","description","chanelImg","texts","title","chanel","channelTitle","publishTime","publishedAt","PopularVideoList","updateDatas","map","Date","now","Math","random","page","styles_search","styles_video","SearchVideoList","prevProps","styles_play","DATAFORM","tags","viewCount","likeCount","dislikeCount","VideoContainer","Object","assign","updateAll","tag","statistics","embed_youtube","frameBorder","allow","allowFullScreen","title_container","title_tag","title_name","title_menu_container","date","menu_container","explain_container","picture","detail_container","author_name","subscriber","brief_explain","subscribeBtn","comment_container","App","item","changePage","newPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8245d94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sidebar_container__2htf-\",\"fadein\":\"sidebar_fadein__1_byP\",\"fadeout\":\"sidebar_fadeout__2PTi7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"popularVideoList_container__1ETmQ\",\"move\":\"popularVideoList_move__3WdeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"se_searchVideoList_container__2RuE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"pl_searchVideoList_container__2si8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"se_thumbnail_container__23hnQ\",\"description\":\"se_thumbnail_description__37FEM\",\"texts\":\"se_thumbnail_texts__2GTFH\",\"title\":\"se_thumbnail_title__2iMzL\",\"chanelImg\":\"se_thumbnail_chanelImg__11SVU\",\"chanel\":\"se_thumbnail_chanel__1N8hZ\",\"publishTime\":\"se_thumbnail_publishTime__3DNtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"se_thumbnail_inVideo_container__12MmW\",\"description\":\"se_thumbnail_inVideo_description__DLYf0\",\"texts\":\"se_thumbnail_inVideo_texts__2sKKa\",\"title\":\"se_thumbnail_inVideo_title__1jmDZ\",\"chanelImg\":\"se_thumbnail_inVideo_chanelImg__3L20A\",\"chanel\":\"se_thumbnail_inVideo_chanel__3v7Z0\",\"publishTime\":\"se_thumbnail_inVideo_publishTime__2bHfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"de_thumbnail_container__1dmYQ\",\"description\":\"de_thumbnail_description__3fxYX\",\"texts\":\"de_thumbnail_texts__30glS\",\"title\":\"de_thumbnail_title__TueQO\",\"chanelImg\":\"de_thumbnail_chanelImg__1WOhV\",\"chanel\":\"de_thumbnail_chanel__3rjIL\",\"publishTime\":\"de_thumbnail_publishTime__1JvAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__3hoMn\",\"logo\":\"header_logo__3iSgw\",\"icon\":\"header_icon__1EhbJ\",\"searchContainer\":\"header_searchContainer__2XWJT\",\"menu\":\"header_menu__3_Gpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"videoContainer_container__u5-1t\",\"embed_youtube\":\"videoContainer_embed_youtube__2f9b2\",\"description\":\"videoContainer_description__2ZW03\",\"title_container\":\"videoContainer_title_container__6PxZ6\",\"title_tag\":\"videoContainer_title_tag__Y3Ity\",\"title_name\":\"videoContainer_title_name___P2kE\",\"title_menu_container\":\"videoContainer_title_menu_container__3Ewec\",\"date\":\"videoContainer_date__v7Yv1\",\"menu_container\":\"videoContainer_menu_container__11VsV\",\"explain_container\":\"videoContainer_explain_container__2LKwE\",\"picture\":\"videoContainer_picture__3Y7F0\",\"detail_container\":\"videoContainer_detail_container__1CSeL\",\"author_name\":\"videoContainer_author_name__1rlqP\",\"subscriber\":\"videoContainer_subscriber__2Wae-\",\"brief_explain\":\"videoContainer_brief_explain__34-lo\",\"subscribeBtn\":\"videoContainer_subscribeBtn__38RV_\",\"contents_left\":\"videoContainer_contents_left__h-sGn\",\"comment_container\":\"videoContainer_comment_container__3IZWU\"};","export const PAGES = {\n    defaultPage: \"defaultPage\",\n    searchPage: \"searchPage\",\n    playPage: \"playPage\",\n};\n\nexport const PLAYLISTTYPE = {\n    searchType: \"searchType\",\n    playType: \"playType\",\n};\n\nexport const SEARCH_TYPE = {\n    videos: \"videos\",\n    search: \"search\",\n    chanenls: \"channels\",\n};\n\nconst requestOptions = {\n    method: \"GET\",\n    redirect: \"follow\",\n};\n\nexport async function getYoutubePopularVideoData(callback) {\n    const url = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet&maxResults=20&chart=mostPopular&regionCode=KR&key=${process.env.REACT_APP_API_KEY}`;\n    fetch(url, requestOptions)\n        .then((response) => response.json())\n        .then((result) => {\n            callback && callback(result.items);\n        })\n        .catch((error) => console.log(\"error\", error));\n}\n\nexport async function getYoutubeVideoData(videoId, callback) {\n    const url = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2Cstatistics&regionCode=KR&id=${videoId}&key=${process.env.REACT_APP_API_KEY}`;\n    fetch(url, requestOptions)\n        .then((response) => response.json())\n        .then((result) => {\n            callback && callback(result.items[0]);\n        })\n        .catch((error) => console.log(\"error\", error));\n}\n\nexport async function getYoutubeSearchData(keyword, callback) {\n    const url = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=20&q=${keyword}&regionCode=KR&key=${process.env.REACT_APP_API_KEY}`;\n    fetch(url, requestOptions)\n        .then((response) => response.json())\n        .then((result) => {\n            callback && callback(result.items);\n        })\n        .catch((error) => console.log(\"error\", error));\n}\n\nexport async function getYoutubeChanelData(channelId, callback) {\n    const url = `https://youtube.googleapis.com/youtube/v3/channels?part=snippet&id=${channelId}&key=${process.env.REACT_APP_API_KEY}`;\n    fetch(url, requestOptions)\n        .then((response) => response.json())\n        .then((result) => {\n            callback && callback(result.items[0]);\n        })\n        .catch((error) => console.log(\"error\", error));\n}\n","import React, { memo } from \"react\";\nimport styles from \"../header.module.css\";\n\nconst SearchForm = memo((props) => {\n    const formRef = React.createRef();\n    const inputRef = React.createRef();\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const word = inputRef.current.value;\n\n        //여기서 props의 onSearch에 word 넣는다.\n        word && props.onSearch(word);\n        formRef.current.reset();\n    };\n\n    return (\n        <form\n            className={styles.searchContainer}\n            ref={formRef}\n            onSubmit={onSubmit}\n        >\n            <input\n                ref={inputRef}\n                type=\"text\"\n                className=\"search-input\"\n                placeholder=\"Search..\"\n            ></input>\n            <button className=\"search-button\">\n                <i className=\"fa fa-search\"></i>\n            </button>\n            <i className=\"fas fa-microphone\"></i>\n        </form>\n    );\n});\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm/searchForm\";\nimport styles from \"./header.module.css\";\n\nclass Header extends Component {\n    render() {\n        return (\n            <nav className={styles.container}>\n                <div className={styles.logo}>\n                    <i className=\"fas fa-bars\"></i>\n                    <span className={styles.icon}>\n                        <i className=\"fab fa-youtube\"></i>\n                    </span>\n                    <a href=\"\">Youtube</a>\n                </div>\n                <SearchForm onSearch={this.props.onSearch} />\n                <div className={styles.menu}>\n                    <i className=\"fas fa-video\"></i>\n                    <i className=\"fas fa-th\"></i>\n                    <i className=\"fas fa-bell\"></i>\n                    <i className=\"fas fa-user-circle\"></i>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport styles from \"./sidebar.module.css\";\n\nclass Sidebar extends Component {\n    render() {\n        return (\n            <div className={styles.container}>\n                <button>\n                    <i className=\"fas fa-home\"></i>\n                    <span>홈</span>\n                </button>\n                <button>\n                    <i className=\"fas fa-fire\"></i>\n                    <span>인기</span>\n                </button>\n                <button>\n                    <i className=\"fas fa-envelope\"></i>\n                    <span>구독</span>\n                </button>\n                <button>\n                    <i className=\"fas fa-box\"></i>\n                    <span>보관함</span>\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import { configure } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport styles from \"./de_thumbnail.module.css\";\nimport * as config from \"../../../config.js\";\n\n//하... 썸네일도 뿌려야 되는데 api 너무많이쓰넴..\nclass Thumbnail extends Component {\n    state = {\n        channelThumnailUrl: undefined,\n    };\n\n    //썸네일 이미지 때문에.. api 호출 여기서 하는게.. 좋을듯\n    componentDidMount() {\n        config.getYoutubeChanelData(\n            this.props.data.snippet.channelId,\n            this.updateChannelThunmnailUrl\n        );\n    }\n\n    updateChannelThunmnailUrl = (datas) => {\n        const channelThumnailUrl = datas.snippet.thumbnails.default.url;\n        this.setState({ channelThumnailUrl });\n    };\n\n    onVideoImgClick = () => {\n        this.props.onEnterVideo(this.props.data.id);\n    };\n\n    render() {\n        return (\n            <button className={styles.container} onClick={this.onVideoImgClick}>\n                <img\n                    src={this.props.data.snippet.thumbnails.medium.url}\n                    width=\"280\"\n                    height=\"158\"\n                    alt=\"\"\n                />\n                <div className={styles.description}>\n                    <img\n                        className={styles.chanelImg}\n                        src={this.state.channelThumnailUrl}\n                        width=\"30\"\n                        height=\"30\"\n                        alt=\"\"\n                    />\n                    <div className={styles.texts}>\n                        <span className={styles.title}>\n                            {this.props.data.snippet.title}\n                        </span>\n                        <span className={styles.chanel}>\n                            {this.props.data.snippet.channelTitle}\n                        </span>\n                        <span className={styles.publishTime}>\n                            {this.props.data.snippet.publishedAt}\n                        </span>\n                    </div>\n                </div>\n            </button>\n        );\n    }\n}\n\nexport default Thumbnail;\n","import React, { Component } from \"react\";\nimport styles from \"./popularVideoList.module.css\";\nimport Thumbnail from \"./DefaultVideoThumbnail/de_thumbnail\";\nimport * as config from \"../../config\";\n\nclass PopularVideoList extends Component {\n    state = {\n        datas: [],\n    };\n\n    componentDidMount() {\n        //처음 들어갔을때 popular search를 해서 값들을 가지고 있는다.\n        config.getYoutubePopularVideoData(this.updateDatas);\n    }\n\n    updateDatas = (result) => {\n        const datas = [...result];\n        this.setState({ datas });\n    };\n\n    render() {\n        return (\n            <div className={styles.container}>\n                {this.state.datas.map((data) => (\n                    <Thumbnail\n                        key={Date.now() + Math.random() * 2}\n                        data={data}\n                        onEnterVideo={this.props.onEnterVideo}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default PopularVideoList;\n","import React, { Component } from \"react\";\nimport styles_search from \"./se_thumbnail.module.css\";\nimport styles_video from \"./se_thumbnail_inVideo.module.css\";\nimport * as config from \"../../../config.js\";\n\n//하... 썸네일도 뿌려야 되는데 api 너무많이쓰넴..\nclass Thumbnail extends Component {\n    state = {\n        channelThumnailUrl: undefined,\n        styles: undefined,\n    };\n\n    //// 일단 없는게 깔끔해서 뺐음.. 필요하면 쓸것\n    // //썸네일 이미지 때문에.. api 호출 여기서 하는게.. 좋을듯\n    // componentDidMount() {\n    //     config.getYoutubeChanelData(\n    //         this.props.data.snippet.channelId,\n    //         this.updateChannelThunmnailUrl\n    //     );\n    // }\n\n    // updateChannelThunmnailUrl = (datas) => {\n    //     const channelThumnailUrl = datas.snippet.thumbnails.default.url;\n    //     this.setState({ channelThumnailUrl });\n    // };\n\n    onVideoImgClick = () => {\n        this.props.onEnterVideo(this.props.data.id.videoId);\n    };\n\n    render() {\n        const styles =\n            this.props.page === config.PAGES.searchPage\n                ? styles_search\n                : styles_video;\n        return (\n            <button className={styles.container} onClick={this.onVideoImgClick}>\n                <img\n                    src={this.props.data.snippet.thumbnails.medium.url}\n                    width=\"280\"\n                    height=\"158\"\n                    alt=\"\"\n                />\n                <div className={styles.description}>\n                    <img\n                        className={styles.chanelImg}\n                        src={this.state.channelThumnailUrl}\n                        width=\"30\"\n                        height=\"30\"\n                        alt=\"\"\n                    />\n                    <div className={styles.texts}>\n                        <span className={styles.title}>\n                            {this.props.data.snippet.title}\n                        </span>\n                        <span className={styles.chanel}>\n                            {this.props.data.snippet.channelTitle}\n                        </span>\n                        <span className={styles.publishTime}>\n                            {this.props.data.snippet.publishedAt}\n                        </span>\n                    </div>\n                </div>\n            </button>\n        );\n    }\n}\n\nexport default Thumbnail;\n","import React, { Component } from \"react\";\nimport styles_search from \"./se_searchVideoList.module.css\";\nimport styles_play from \"./pl_searchVideoList.module.css\";\nimport Thumbnail from \"./SearchVideoThumbnail/se_thumbnail\";\nimport * as config from \"../../config.js\";\n\nclass SearchVideoList extends Component {\n    state = {\n        datas: [],\n    };\n\n    //현재 서치가 안되는 문제, 아마도 지금 여기서는 this.props.keyword의 변화가 여기엔 영향을 미치지 않는다.\n    //구조를 바꿔야함. 음.. 함수를 써서 바뀔때마다 호출하게 할수있나??\n    //componentDidUpdate로 해결\n\n    componentDidMount() {\n        //search keyword를 넣는다.\n        config.getYoutubeSearchData(this.props.keyword, this.updateDatas);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.keyword !== this.props.keyword) {\n            config.getYoutubeSearchData(this.props.keyword, this.updateDatas);\n        }\n    }\n\n    updateDatas = (result) => {\n        const datas = [...result];\n        this.setState({ datas });\n    };\n\n    render() {\n        return (\n            <div\n                className={\n                    this.props.page === config.PAGES.searchPage\n                        ? styles_search.container\n                        : styles_play.container\n                }\n            >\n                {this.state.datas.map((data) => (\n                    <Thumbnail\n                        key={Date.now() + Math.random() * 2}\n                        data={data}\n                        page={this.props.page}\n                        onEnterVideo={this.props.onEnterVideo}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default SearchVideoList;\n","import React, { Component } from \"react\";\nimport styles from \"./videoContainer.module.css\";\nimport * as config from \"../../config.js\";\n\nconst DATAFORM = {\n    channelId: undefined,\n    channelTitle: undefined,\n    description: undefined,\n    publishedAt: undefined,\n    tags: \"\",\n    title: undefined,\n    viewCount: undefined,\n    likeCount: undefined,\n    dislikeCount: undefined,\n};\n\nclass VideoContainer extends Component {\n    state = {\n        datas: Object.assign(DATAFORM),\n        channelThumnailUrl: undefined,\n    };\n\n    //여기서 app에서 video id를 props로 받아서 api call을 해서 띄어줌\n    componentDidMount() {\n        config.getYoutubeVideoData(this.props.videoId, this.updateAll);\n        console.log(this.props.videoId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.videoId !== this.props.videoId) {\n            config.getYoutubeVideoData(this.props.videoId, this.updateAll);\n        }\n    }\n\n    updateAll = (items) => {\n        const datas = Object.assign(DATAFORM);\n        console.log(items);\n\n        datas.channelId = items.snippet.channelId;\n        datas.channelTitle = items.snippet.channelTitle;\n        datas.description = items.snippet.description;\n        datas.publishedAt = items.snippet.publishedAt;\n        datas.tags = items.snippet.tags.map((tag) => `#${tag} `);\n        datas.title = items.snippet.title;\n        datas.viewCount = items.statistics.viewCount;\n        datas.likeCount = items.statistics.likeCount;\n        datas.dislikeCount = items.statistics.dislikeCount;\n        // console.log(datas);\n\n        //여기서 호출해야 함..\n        config.getYoutubeChanelData(\n            items.snippet.channelId,\n            this.updateChannelThunmnailUrl\n        );\n\n        this.setState({ datas });\n    };\n\n    updateChannelThunmnailUrl = (datas) => {\n        const channelThumnailUrl = datas.snippet.thumbnails.default.url;\n        this.setState({ channelThumnailUrl });\n    };\n\n    render() {\n        return (\n            <div className={styles.container}>\n                <section className={styles.embed_youtube}>\n                    <iframe\n                        src={`https://www.youtube.com/embed/${this.props.videoId}`}\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                </section>\n                <section className={styles.description}>\n                    <header className={styles.title_container}>\n                        <div className={styles.title_tag}>\n                            {this.state.datas.tags}\n                        </div>\n                        <div className={styles.title_name}>\n                            {this.state.datas.title}\n                        </div>\n                        <div className={styles.title_menu_container}>\n                            <div className={styles.date}>\n                                {this.state.datas.publishedAt}\n                            </div>\n                            <div className={styles.menu_container}>\n                                <button className=\"like_toggleBtn\">\n                                    <i className=\"fas fa-thumbs-up\"></i>\n                                    {this.state.datas.likeCount}\n                                </button>\n                                <button className=\"hate_toggleBtn\">\n                                    <i className=\"fas fa-thumbs-down\"></i>\n                                    {this.state.datas.dislikeCount}\n                                </button>\n                                <button className=\"shareBtn\">\n                                    <i className=\"fas fa-share\"></i>\n                                    공유\n                                </button>\n                                <button className=\"saveBtn\">\n                                    <i className=\"fas fa-download\"></i>\n                                    저장\n                                </button>\n                                <button className=\"reportBtn\">\n                                    <i className=\"fas fa-ellipsis-h\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </header>\n                    <div className={styles.explain_container}>\n                        <a href=\"#\" className={styles.picture}>\n                            <img src={this.state.channelThumnailUrl}></img>\n                        </a>\n                        <div className={styles.detail_container}>\n                            <a href=\"\" className={styles.author_name}>\n                                {this.state.datas.channelTitle}\n                            </a>\n                            <div className={styles.subscriber}>\n                                구독자 4.61만명\n                            </div>\n                            <div className={styles.brief_explain}>\n                                {this.state.datas.description}\n                            </div>\n                        </div>\n                        <button className={styles.subscribeBtn}>구독</button>\n                    </div>\n                    <div className={styles.comment_container}></div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default VideoContainer;\n","import \"./app.css\";\nimport React, { Component } from \"react\";\nimport * as config from \"./config\";\nimport Header from \"./components/Header/header\";\nimport Sidebar from \"./components/Sidebar/sidebar\";\nimport PopularVideoList from \"./components/DefaultContents/popularVideoList\";\nimport SearchVideoList from \"./components/SearchContents/searchVideoList\";\nimport VideoContainer from \"./components/VideoPlayContents/videoContainer\";\n\nclass App extends Component {\n    state = {\n        page: config.PAGES.defaultPage,\n        keyword: \"\",\n        videoId: \"\",\n    };\n\n    onSearch = (item) => {\n        //keyword를 바꾼다.\n        const keyword = item;\n        this.setState({ keyword });\n\n        //search page를 띄운다.\n        this.changePage(config.PAGES.searchPage);\n    };\n\n    onEnterVideo = (item) => {\n        const videoId = item;\n        this.setState({ videoId });\n\n        //여기서는 무슨 비디오를 요청했는지 videoId를 받아오고 이 아이디를 바탕으로 play page를 띄운다.\n        this.changePage(config.PAGES.playPage);\n    };\n\n    changePage = (newPage) => {\n        const page = newPage;\n        this.setState({ page });\n    };\n\n    render() {\n        if (this.state.page === config.PAGES.defaultPage) {\n            return (\n                <>\n                    <Header onSearch={this.onSearch} />\n                    <div className=\"mainContent\">\n                        <Sidebar />\n                        <PopularVideoList onEnterVideo={this.onEnterVideo} />\n                    </div>\n                </>\n            );\n        } else if (this.state.page === config.PAGES.searchPage) {\n            return (\n                <>\n                    <Header onSearch={this.onSearch} />\n                    <div className=\"mainContent\">\n                        <Sidebar />\n                        <SearchVideoList\n                            keyword={this.state.keyword}\n                            page={this.state.page}\n                            onEnterVideo={this.onEnterVideo}\n                        />\n                    </div>\n                </>\n            );\n        } else if (this.state.page === config.PAGES.playPage) {\n            return (\n                <>\n                    <Header onSearch={this.onSearch} />\n                    <div className=\"mainGridContent\">\n                        <VideoContainer videoId={this.state.videoId} />\n                        <SearchVideoList\n                            keyword={this.state.keyword}\n                            page={this.state.page}\n                            onEnterVideo={this.onEnterVideo}\n                        />\n                    </div>\n                </>\n            );\n        }\n    }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}