[{"/Users/aepeul/Desktop/DreamCoding/react-basic/templete/src/index.js":"1","/Users/aepeul/Desktop/DreamCoding/react-basic/templete/src/reportWebVitals.js":"2","/Users/aepeul/Desktop/DreamCoding/react-basic/templete/src/app.jsx":"3","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/app.jsx":"4","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/index.js":"5","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/reportWebVitals.js":"6","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/Header/header.jsx":"7","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/DefaultContents/popularVideoList.jsx":"8","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/DefaultContents/DefaultVideoThumbnail/de_thumbnail.jsx":"9","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/SearchContents/searchVideoList.jsx":"10","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/SearchContents/SearchVideoThumbnail/se_thumbnail.jsx":"11","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/VideoPlayContents/videoContainer.jsx":"12","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/Header/SearchForm/searchForm.jsx":"13","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/config.js":"14","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/Sidebar/sidebar.jsx":"15"},{"size":510,"mtime":1609926006951,"results":"16","hashOfConfig":"17"},{"size":452,"mtime":1609925450218,"results":"18","hashOfConfig":"17"},{"size":91,"mtime":1609926042621,"results":"19","hashOfConfig":"17"},{"size":2745,"mtime":1610752681526,"results":"20","hashOfConfig":"21"},{"size":510,"mtime":1610438715073,"results":"22","hashOfConfig":"21"},{"size":452,"mtime":1610438715072,"results":"23","hashOfConfig":"21"},{"size":956,"mtime":1610684690256,"results":"24","hashOfConfig":"21"},{"size":1008,"mtime":1610771539301,"results":"25","hashOfConfig":"21"},{"size":2135,"mtime":1610752585649,"results":"26","hashOfConfig":"21"},{"size":1744,"mtime":1610761683564,"results":"27","hashOfConfig":"21"},{"size":2431,"mtime":1610760582520,"results":"28","hashOfConfig":"21"},{"size":5468,"mtime":1610760753397,"results":"29","hashOfConfig":"21"},{"size":991,"mtime":1610684701119,"results":"30","hashOfConfig":"21"},{"size":2145,"mtime":1610757858038,"results":"31","hashOfConfig":"21"},{"size":837,"mtime":1610753369459,"results":"32","hashOfConfig":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n3ji5s",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fg10cw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aepeul/Desktop/DreamCoding/react-basic/templete/src/index.js",[],"/Users/aepeul/Desktop/DreamCoding/react-basic/templete/src/reportWebVitals.js",[],"/Users/aepeul/Desktop/DreamCoding/react-basic/templete/src/app.jsx",[],"/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/app.jsx",[],"/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/index.js",[],["66","67"],"/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/reportWebVitals.js",[],"/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/Header/header.jsx",["68"],"/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/DefaultContents/popularVideoList.jsx",[],"/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/DefaultContents/DefaultVideoThumbnail/de_thumbnail.jsx",["69"],"import { configure } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport styles from \"./de_thumbnail.module.css\";\nimport * as config from \"../../../config.js\";\n\n//하... 썸네일도 뿌려야 되는데 api 너무많이쓰넴..\nclass Thumbnail extends Component {\n    state = {\n        channelThumnailUrl: undefined,\n    };\n\n    //썸네일 이미지 때문에.. api 호출 여기서 하는게.. 좋을듯\n    componentDidMount() {\n        config.getYoutubeChanelData(\n            this.props.data.snippet.channelId,\n            this.updateChannelThunmnailUrl\n        );\n    }\n\n    updateChannelThunmnailUrl = (datas) => {\n        const channelThumnailUrl = datas.snippet.thumbnails.default.url;\n        this.setState({ channelThumnailUrl });\n    };\n\n    onVideoImgClick = () => {\n        this.props.onEnterVideo(this.props.data.id);\n    };\n\n    render() {\n        return (\n            <button className={styles.container} onClick={this.onVideoImgClick}>\n                <img\n                    src={this.props.data.snippet.thumbnails.medium.url}\n                    width=\"280\"\n                    height=\"158\"\n                    alt=\"\"\n                />\n                <div className={styles.description}>\n                    <img\n                        className={styles.chanelImg}\n                        src={this.state.channelThumnailUrl}\n                        width=\"30\"\n                        height=\"30\"\n                        alt=\"\"\n                    />\n                    <div className={styles.texts}>\n                        <span className={styles.title}>\n                            {this.props.data.snippet.title}\n                        </span>\n                        <span className={styles.chanel}>\n                            {this.props.data.snippet.channelTitle}\n                        </span>\n                        <span className={styles.publishTime}>\n                            {this.props.data.snippet.publishedAt}\n                        </span>\n                    </div>\n                </div>\n            </button>\n        );\n    }\n}\n\nexport default Thumbnail;\n","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/SearchContents/searchVideoList.jsx",[],"/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/SearchContents/SearchVideoThumbnail/se_thumbnail.jsx",[],"/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/VideoPlayContents/videoContainer.jsx",["70","71","72","73"],"import React, { Component } from \"react\";\nimport styles from \"./videoContainer.module.css\";\nimport * as config from \"../../config.js\";\n\nconst DATAFORM = {\n    channelId: undefined,\n    channelTitle: undefined,\n    description: undefined,\n    publishedAt: undefined,\n    tags: \"\",\n    title: undefined,\n    viewCount: undefined,\n    likeCount: undefined,\n    dislikeCount: undefined,\n};\n\nclass VideoContainer extends Component {\n    state = {\n        datas: Object.assign(DATAFORM),\n        channelThumnailUrl: undefined,\n    };\n\n    //여기서 app에서 video id를 props로 받아서 api call을 해서 띄어줌\n    componentDidMount() {\n        config.getYoutubeVideoData(this.props.videoId, this.updateAll);\n        console.log(this.props.videoId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.videoId !== this.props.videoId) {\n            config.getYoutubeVideoData(this.props.videoId, this.updateAll);\n        }\n    }\n\n    updateAll = (items) => {\n        const datas = Object.assign(DATAFORM);\n        console.log(items);\n\n        datas.channelId = items.snippet.channelId;\n        datas.channelTitle = items.snippet.channelTitle;\n        datas.description = items.snippet.description;\n        datas.publishedAt = items.snippet.publishedAt;\n        datas.tags = items.snippet.tags.map((tag) => `#${tag} `);\n        datas.title = items.snippet.title;\n        datas.viewCount = items.statistics.viewCount;\n        datas.likeCount = items.statistics.likeCount;\n        datas.dislikeCount = items.statistics.dislikeCount;\n        // console.log(datas);\n\n        //여기서 호출해야 함..\n        config.getYoutubeChanelData(\n            items.snippet.channelId,\n            this.updateChannelThunmnailUrl\n        );\n\n        this.setState({ datas });\n    };\n\n    updateChannelThunmnailUrl = (datas) => {\n        const channelThumnailUrl = datas.snippet.thumbnails.default.url;\n        this.setState({ channelThumnailUrl });\n    };\n\n    render() {\n        return (\n            <div className={styles.container}>\n                <section className={styles.embed_youtube}>\n                    <iframe\n                        src={`https://www.youtube.com/embed/${this.props.videoId}`}\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                </section>\n                <section className={styles.description}>\n                    <header className={styles.title_container}>\n                        <div className={styles.title_tag}>\n                            {this.state.datas.tags}\n                        </div>\n                        <div className={styles.title_name}>\n                            {this.state.datas.title}\n                        </div>\n                        <div className={styles.title_menu_container}>\n                            <div className={styles.date}>\n                                {this.state.datas.publishedAt}\n                            </div>\n                            <div className={styles.menu_container}>\n                                <button className=\"like_toggleBtn\">\n                                    <i className=\"fas fa-thumbs-up\"></i>\n                                    {this.state.datas.likeCount}\n                                </button>\n                                <button className=\"hate_toggleBtn\">\n                                    <i className=\"fas fa-thumbs-down\"></i>\n                                    {this.state.datas.dislikeCount}\n                                </button>\n                                <button className=\"shareBtn\">\n                                    <i className=\"fas fa-share\"></i>\n                                    공유\n                                </button>\n                                <button className=\"saveBtn\">\n                                    <i className=\"fas fa-download\"></i>\n                                    저장\n                                </button>\n                                <button className=\"reportBtn\">\n                                    <i className=\"fas fa-ellipsis-h\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </header>\n                    <div className={styles.explain_container}>\n                        <a href=\"#\" className={styles.picture}>\n                            <img src={this.state.channelThumnailUrl}></img>\n                        </a>\n                        <div className={styles.detail_container}>\n                            <a href=\"\" className={styles.author_name}>\n                                {this.state.datas.channelTitle}\n                            </a>\n                            <div className={styles.subscriber}>\n                                구독자 4.61만명\n                            </div>\n                            <div className={styles.brief_explain}>\n                                {this.state.datas.description}\n                            </div>\n                        </div>\n                        <button className={styles.subscribeBtn}>구독</button>\n                    </div>\n                    <div className={styles.comment_container}></div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default VideoContainer;\n","/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/Header/SearchForm/searchForm.jsx",[],"/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/config.js",[],"/Users/aepeul/Desktop/DreamCoding/react-basic/React_youtube/src/components/Sidebar/sidebar.jsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":14,"column":21,"nodeType":"80","endLine":14,"endColumn":32},{"ruleId":"81","severity":1,"message":"82","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":68,"column":21,"nodeType":"80","endLine":73,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":111,"column":25,"nodeType":"80","endLine":111,"endColumn":64},{"ruleId":"87","severity":1,"message":"88","line":112,"column":29,"nodeType":"80","endLine":112,"endColumn":70},{"ruleId":"78","severity":1,"message":"79","line":115,"column":29,"nodeType":"80","endLine":115,"endColumn":71},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'configure' is defined but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]